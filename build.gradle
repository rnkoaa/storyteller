subprojects {
    
    afterEvaluate {
        repositories {
            jcenter()
        }
        dependencies {
            testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
            testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"

            testCompileOnly "junit:junit:4.12"
            testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.2"
        }

        compileJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                ]
                classpath = files()
            }
        }

        compileTestJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                        '--add-modules', 'junit',
                        '--add-reads', "$moduleName=junit",
                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
                ]
                classpath = files()
            }
        }

        test {
            useJUnitPlatform()

            inputs.property("moduleName", moduleName)
            doFirst {
                jvmArgs = [
                        '--module-path', classpath.asPath,
                        '--add-modules', 'ALL-MODULE-PATH',
                        '--add-reads', "$moduleName=junit",
                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
                ]
                classpath = files()
            }
        }
    }
}

